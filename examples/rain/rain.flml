<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">rain</string_value>
  </simulation_name>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">3</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="vbox">
        <format name="gmsh"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="PressureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">2</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>continuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <mesh name="TemperatureMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <mesh_shape>
          <polynomial_degree>
            <integer_value rank="0">1</integer_value>
          </polynomial_degree>
        </mesh_shape>
        <mesh_continuity>
          <string_value>discontinuous</string_value>
        </mesh_continuity>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period_in_timesteps>
      <constant>
        <integer_value rank="0">20</integer_value>
      </constant>
    </dump_period_in_timesteps>
    <output_mesh name="PressureMesh"/>
    <checkpointing>
      <checkpoint_period_in_dumps>
        <integer_value rank="0">1000000000</integer_value>
      </checkpoint_period_in_dumps>
      <checkpoint_at_end/>
    </checkpointing>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">10</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">1000000000</real_value>
    </finish_time>
    <final_timestep>
      <integer_value rank="0">1000</integer_value>
    </final_timestep>
    <nonlinear_iterations>
      <integer_value rank="0">2</integer_value>
      <tolerance>
        <real_value rank="0">1.e-12</real_value>
        <infinity_norm/>
      </tolerance>
    </nonlinear_iterations>
    <adaptive_timestep>
      <requested_cfl>
        <real_value rank="0">0.5</real_value>
      </requested_cfl>
      <courant_number name="CFLNumber">
        <mesh name="VelocityMesh"/>
      </courant_number>
      <at_first_timestep/>
    </adaptive_timestep>
  </timestepping>
  <physical_parameters>
    <gravity>
      <magnitude>
        <real_value rank="0">9.81</real_value>
      </magnitude>
      <vector_field name="GravityDirection" rank="1">
        <prescribed>
          <mesh name="CoordinateMesh"/>
          <value name="WholeMesh">
            <constant>
              <real_value shape="3" dim1="dim" rank="1">0.0 0.0 -1.0</real_value>
            </constant>
          </value>
          <output/>
          <stat>
            <include_in_stat/>
          </stat>
          <detectors>
            <exclude_from_detectors/>
          </detectors>
        </prescribed>
      </vector_field>
    </gravity>
  </physical_parameters>
  <material_phase name="gas">
    <equation_of_state>
      <compressible>
        <giraldo>
          <reference_pressure>
            <real_value rank="0">100000</real_value>
          </reference_pressure>
          <C_P>
            <real_value rank="0">1004.64</real_value>
          </C_P>
          <C_V>
            <real_value rank="0">717.6</real_value>
          </C_V>
          <constant_cp_cv/>
        </giraldo>
        <subtract_out_reference_profile/>
      </compressible>
    </equation_of_state>
    <scalar_field name="Pressure" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <remove_stabilisation_term/>
          </continuous_galerkin>
        </spatial_discretisation>
        <scheme>
          <poisson_pressure_solution>
            <string_value lines="1">never</string_value>
          </poisson_pressure_solution>
          <use_projection_method/>
        </scheme>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="sor"/>
          <relative_error>
            <real_value rank="0">1.e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <ignore_all_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    from math import exp
    H = 8000.0
    p0 = 100000.0
    p = p0*exp(-X[2]/H)
    return p</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="inlet_top_outlet">
          <surface_ids>
            <integer_value shape="5" rank="1">404 403 408 413 412</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
    from math import exp
    H = 8000.0
    p0 = 100000.0
    p = p0*exp(-X[2]/H)
    return p</string_value>
            </python>
          </type>
        </boundary_conditions>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <scalar_field name="Density" rank="0">
      <prognostic>
        <mesh name="PressureMesh"/>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <advection_terms/>
            <mass_terms/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.75</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <from_equation_of_state/>
        </initial_condition>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
    <vector_field name="Velocity" rank="1">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="LinearMomentum"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <viscosity_scheme>
              <bassi_rebay/>
              <partial_stress_form/>
            </viscosity_scheme>
            <advection_scheme>
              <upwind/>
              <project_velocity_to_continuous>
                <mesh name="CoordinateMesh"/>
              </project_velocity_to_continuous>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <buoyancy/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.75</real_value>
          </theta>
          <relaxation>
            <real_value rank="0">0.0</real_value>
          </relaxation>
          <discontinuous_galerkin>
            <maximum_courant_number_per_subcycle>
              <real_value rank="0">0.25</real_value>
            </maximum_courant_number_per_subcycle>
          </discontinuous_galerkin>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    from math import log
    h = 1.0
    z0 = 1.0
    kappa = 0.41
    ustar = 0.2
    if((X[2]-h)&lt;z0):
        u = (0.0,0.0,0.0)
    else:
        u = ((ustar/kappa)*log((X[2]-h)/z0),0.0,0.0)
    return u</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="inlet">
          <surface_ids>
            <integer_value shape="1" rank="1">404</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <synthetic_eddy_method>
                  <number_of_eddies>
                    <integer_value rank="0">1000</integer_value>
                  </number_of_eddies>
                  <turbulence_lengthscale>
                    <constant>
                      <real_value rank="0">100.0</real_value>
                    </constant>
                  </turbulence_lengthscale>
                  <mean_profile>
                    <python>
                      <string_value lines="20" type="code" language="python">def val(X, t):
    from math import log
    h = 1.0
    z0 = 1.0
    kappa = 0.41
    ustar = 0.2
    if((X[2]-h)&lt;z0):
        u = 0.0
    else:
        u = (ustar/kappa)*log((X[2]-h)/z0)
    return u</string_value>
                    </python>
                  </mean_profile>
                  <Re_stresses_profile>
                    <constant>
                      <real_value rank="0">1.0</real_value>
                    </constant>
                  </Re_stresses_profile>
                </synthetic_eddy_method>
              </x_component>
              <y_component>
                <synthetic_eddy_method>
                  <number_of_eddies>
                    <integer_value rank="0">1000</integer_value>
                  </number_of_eddies>
                  <turbulence_lengthscale>
                    <constant>
                      <real_value rank="0">150.0</real_value>
                    </constant>
                  </turbulence_lengthscale>
                  <mean_profile>
                    <constant>
                      <real_value rank="0">0.0</real_value>
                    </constant>
                  </mean_profile>
                  <Re_stresses_profile>
                    <constant>
                      <real_value rank="0">1.0</real_value>
                    </constant>
                  </Re_stresses_profile>
                </synthetic_eddy_method>
              </y_component>
              <z_component>
                <synthetic_eddy_method>
                  <number_of_eddies>
                    <integer_value rank="0">1000</integer_value>
                  </number_of_eddies>
                  <turbulence_lengthscale>
                    <constant>
                      <real_value rank="0">220.0</real_value>
                    </constant>
                  </turbulence_lengthscale>
                  <mean_profile>
                    <constant>
                      <real_value rank="0">0.0</real_value>
                    </constant>
                  </mean_profile>
                  <Re_stresses_profile>
                    <constant>
                      <real_value rank="0">1.0</real_value>
                    </constant>
                  </Re_stresses_profile>
                </synthetic_eddy_method>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="top">
          <surface_ids>
            <integer_value shape="3" rank="1">403 408 413</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <z_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="surface">
          <surface_ids>
            <integer_value shape="3" rank="1">402 407 411</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <x_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </x_component>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
              <z_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </z_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <boundary_conditions name="sides">
          <surface_ids>
            <integer_value shape="6" rank="1">400 401 405 406 409 410</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <align_bc_with_cartesian>
              <y_component>
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </y_component>
            </align_bc_with_cartesian>
          </type>
        </boundary_conditions>
        <tensor_field name="Viscosity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1.0e-3</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <vector_field name="Absorption" rank="1">
          <diagnostic>
            <algorithm name="atmosphere_forcing_vector">
              <python>
                <string_value lines="20" type="code" language="python">def val(X, t):
    from math import log
    h = 1.0
    z0 = 1.0
    kappa = 0.41
    ustar = 0.2
    if((X[2]-h)&lt;z0):
        u = (0.0,0.0,0.0)
    else:
        u = ((ustar/kappa)*log((X[2]-h)/z0),0.0,0.0)
    return u</string_value>
              </python>
              <sponge_layer_velocity_absorption>
                <coefficient>
                  <real_value rank="0">1.0</real_value>
                </coefficient>
                <x_sponge_right>
                  <real_value rank="0">6000</real_value>
                </x_sponge_right>
              </sponge_layer_velocity_absorption>
            </algorithm>
            <output/>
            <stat>
              <include_in_stat/>
            </stat>
            <convergence>
              <include_in_convergence/>
            </convergence>
            <detectors>
              <include_in_detectors/>
            </detectors>
            <steady_state>
              <include_in_steady_state/>
            </steady_state>
          </diagnostic>
          <default_absorption/>
        </vector_field>
        <output/>
        <stat>
          <include_in_stat/>
          <previous_time_step>
            <exclude_from_stat/>
          </previous_time_step>
          <nonlinear_field>
            <exclude_from_stat/>
          </nonlinear_field>
        </stat>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
      </prognostic>
    </vector_field>
    <scalar_field name="HydrostaticReferencePressure" rank="0">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    from math import exp
    H = 8000.0
    p0 = 100000.0
    p = p0*exp(-X[2]/H)
    return p</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prescribed>
    </scalar_field>
    <scalar_field name="HydrostaticReferenceDensity" rank="0">
      <prescribed>
        <mesh name="PressureMesh"/>
        <value name="WholeMesh">
          <from_equation_of_state/>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prescribed>
    </scalar_field>
    <scalar_field name="DG_CourantNumber" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="VelocityMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="PotentialTemperature" rank="0">
      <prognostic>
        <mesh name="TemperatureMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <advection_scheme>
              <upwind/>
              <project_velocity_to_continuous>
                <mesh name="CoordinateMesh"/>
              </project_velocity_to_continuous>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <diffusion_scheme>
              <compact_discontinuous_galerkin/>
            </diffusion_scheme>
            <slope_limiter name="Vertex_Based"/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.0</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.75</real_value>
          </theta>
          <discontinuous_galerkin>
            <maximum_courant_number_per_subcycle>
              <real_value rank="0">0.25</real_value>
            </maximum_courant_number_per_subcycle>
          </discontinuous_galerkin>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    zi = 1000.0
    dtdz=0.02
    if(X[2]&gt;zi):
        pt = 300.0+(X[2]-zi)*dtdz
    else:
        pt = 300.0
    return pt</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="inlet">
          <surface_ids>
            <integer_value shape="1" rank="1">404</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
    zi = 1000.0
    dtdz=0.02
    if(X[2]&gt;zi):
        pt = 300.0+(X[2]-zi)*dtdz
    else:
        pt = 300.0
    return pt</string_value>
            </python>
          </type>
        </boundary_conditions>
        <boundary_conditions name="island">
          <surface_ids>
            <integer_value shape="2" rank="1">407 411</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <constant>
              <real_value rank="0">305.0</real_value>
            </constant>
          </type>
        </boundary_conditions>
        <tensor_field name="Diffusivity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1.0e-3</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field name="HydrostaticReferencePotentialTemperature" rank="0">
      <prescribed>
        <mesh name="TemperatureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    zi = 1000.0
    dtdz=0.02
    if(X[2]&gt;zi):
        pt = 300.0+(X[2]-zi)*dtdz
    else:
        pt = 300.0
    return pt</string_value>
          </python>
        </value>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prescribed>
    </scalar_field>
    <scalar_field name="PressurePert" rank="0">
      <diagnostic>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Pressure" source_field_2_name="HydrostaticReferencePressure" material_phase_support="single" source_field_1_type="scalar"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="DensityPert" rank="0">
      <diagnostic>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="Density" source_field_2_name="HydrostaticReferenceDensity" material_phase_support="single" source_field_1_type="scalar"/>
        <mesh name="PressureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="PotTempPert" rank="0">
      <diagnostic>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="PotentialTemperature" source_field_2_name="HydrostaticReferencePotentialTemperature" material_phase_support="single" source_field_1_type="scalar"/>
        <mesh name="TemperatureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="VapourWaterQ" rank="0">
      <prognostic>
        <mesh name="TemperatureMesh"/>
        <equation name="AdvectionDiffusion"/>
        <spatial_discretisation>
          <discontinuous_galerkin>
            <advection_scheme>
              <upwind/>
              <project_velocity_to_continuous>
                <mesh name="CoordinateMesh"/>
              </project_velocity_to_continuous>
              <integrate_advection_by_parts>
                <twice/>
              </integrate_advection_by_parts>
            </advection_scheme>
            <diffusion_scheme>
              <compact_discontinuous_galerkin/>
            </diffusion_scheme>
            <slope_limiter name="Vertex_Based"/>
          </discontinuous_galerkin>
          <conservative_advection>
            <real_value rank="0">0.</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.75</real_value>
          </theta>
          <discontinuous_galerkin>
            <maximum_courant_number_per_subcycle>
              <real_value rank="0">0.25</real_value>
            </maximum_courant_number_per_subcycle>
          </discontinuous_galerkin>
        </temporal_discretisation>
        <solver>
          <iterative_method name="gmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
          </iterative_method>
          <preconditioner name="eisenstat"/>
          <relative_error>
            <real_value rank="0">1.e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    dQdz=-0.0025
    Q = 17.0 + X[2]*dQdz
    Q = Q/1000.
    return Q</string_value>
          </python>
        </initial_condition>
        <boundary_conditions name="inlet">
          <surface_ids>
            <integer_value shape="1" rank="1">404</integer_value>
          </surface_ids>
          <type name="dirichlet">
            <python>
              <string_value lines="20" type="code" language="python">def val(X, t):
    dQdz=-0.0025
    Q = 17.0 + X[2]*dQdz
    Q = Q/1000.
    return Q</string_value>
            </python>
          </type>
        </boundary_conditions>
        <tensor_field name="Diffusivity" rank="2">
          <prescribed>
            <value name="WholeMesh">
              <isotropic>
                <constant>
                  <real_value rank="0">1.e-3</real_value>
                </constant>
              </isotropic>
            </value>
            <output/>
          </prescribed>
        </tensor_field>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <galerkin_projection>
          <discontinuous/>
        </galerkin_projection>
      </prognostic>
    </scalar_field>
    <scalar_field name="HydrostaticReferenceVapourWaterQ" rank="0">
      <prescribed>
        <mesh name="TemperatureMesh"/>
        <value name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">def val(X, t):
    dQdz=-0.0025
    Q = 17.0 + X[2]*dQdz
    Q = Q/1000.
    return Q</string_value>
          </python>
        </value>
        <output/>
        <stat/>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <consistent_interpolation/>
      </prescribed>
    </scalar_field>
    <scalar_field name="QPert" rank="0">
      <diagnostic>
        <algorithm source_field_2_type="scalar" name="scalar_difference" source_field_1_name="VapourWaterQ" source_field_2_name="HydrostaticReferenceVapourWaterQ" material_phase_support="single" source_field_1_type="scalar"/>
        <mesh name="TemperatureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="Saturation" rank="0">
      <diagnostic>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <mesh name="TemperatureMesh"/>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="SurfacePrecipitation" rank="0">
      <diagnostic>
        <mesh name="TemperatureMesh"/>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <boundary_conditions name="diagnostic">
          <surface_ids>
            <integer_value shape="3" rank="1">402 407 411</integer_value>
          </surface_ids>
          <parent_field_name>Qdrop</parent_field_name>
          <type name="surface_precipitation"/>
        </boundary_conditions>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <scalar_field name="CumulatedSurfacePrecipitation" rank="0">
      <diagnostic>
        <mesh name="TemperatureMesh"/>
        <algorithm name="Internal" material_phase_support="multiple"/>
        <boundary_conditions name="diagnostic">
          <surface_ids>
            <integer_value shape="3" rank="1">402 407 411</integer_value>
          </surface_ids>
          <parent_field_name>Qdrop</parent_field_name>
          <type name="cumulated_surface_precipitation"/>
        </boundary_conditions>
        <output/>
        <stat/>
        <convergence>
          <include_in_convergence/>
        </convergence>
        <detectors>
          <include_in_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
      </diagnostic>
    </scalar_field>
    <cloud_microphysics>
      <time_integration name="Strang"/>
      <condensation_evaporation name="Analytic"/>
      <no_negative_concentrations/>
      <fortran_microphysics>
        <scalar_field name="MicrophysicsSource" rank="0">
          <diagnostic>
            <mesh name="TemperatureMesh"/>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1.e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <output/>
            <stat/>
            <detectors>
              <include_in_detectors/>
            </detectors>
          </diagnostic>
        </scalar_field>
        <scalar_field name="SinkingVelocity" rank="0">
          <diagnostic>
            <mesh name="TemperatureMesh"/>
            <algorithm name="Internal" material_phase_support="multiple"/>
            <solver>
              <iterative_method name="gmres">
                <restart>
                  <integer_value rank="0">30</integer_value>
                </restart>
              </iterative_method>
              <preconditioner name="sor"/>
              <relative_error>
                <real_value rank="0">1.e-7</real_value>
              </relative_error>
              <max_iterations>
                <integer_value rank="0">1000</integer_value>
              </max_iterations>
              <never_ignore_solver_failures/>
              <diagnostics>
                <monitors/>
              </diagnostics>
            </solver>
            <output/>
            <stat/>
            <detectors>
              <include_in_detectors/>
            </detectors>
          </diagnostic>
        </scalar_field>
        <two_moment_microphysics name="seifert_beheng">
          <scalar_field name="CCN" rank="0">
            <prescribed>
              <mesh name="TemperatureMesh"/>
              <value name="WholeMesh">
                <constant>
                  <real_value rank="0">300000000</real_value>
                </constant>
              </value>
              <output/>
              <stat/>
              <detectors>
                <exclude_from_detectors/>
              </detectors>
              <consistent_interpolation/>
            </prescribed>
          </scalar_field>
          <scalar_field name="Ndrop" rank="0">
            <prognostic>
              <mesh name="TemperatureMesh"/>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <discontinuous_galerkin>
                  <advection_scheme>
                    <upwind/>
                    <project_velocity_to_continuous>
                      <mesh name="CoordinateMesh"/>
                    </project_velocity_to_continuous>
                    <integrate_advection_by_parts>
                      <twice/>
                    </integrate_advection_by_parts>
                  </advection_scheme>
                  <diffusion_scheme>
                    <compact_discontinuous_galerkin/>
                  </diffusion_scheme>
                  <slope_limiter name="Vertex_Based"/>
                </discontinuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.75</real_value>
                </theta>
                <discontinuous_galerkin>
                  <maximum_courant_number_per_subcycle>
                    <real_value rank="0">0.25</real_value>
                  </maximum_courant_number_per_subcycle>
                </discontinuous_galerkin>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="eisenstat"/>
                <relative_error>
                  <real_value rank="0">1.e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <constant>
                  <real_value rank="0">0.</real_value>
                </constant>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
            </prognostic>
          </scalar_field>
          <scalar_field name="Qdrop" rank="0">
            <prognostic>
              <mesh name="TemperatureMesh"/>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <discontinuous_galerkin>
                  <advection_scheme>
                    <upwind/>
                    <project_velocity_to_continuous>
                      <mesh name="CoordinateMesh"/>
                    </project_velocity_to_continuous>
                    <integrate_advection_by_parts>
                      <twice/>
                    </integrate_advection_by_parts>
                  </advection_scheme>
                  <diffusion_scheme>
                    <compact_discontinuous_galerkin/>
                  </diffusion_scheme>
                  <slope_limiter name="Vertex_Based"/>
                </discontinuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.75</real_value>
                </theta>
                <discontinuous_galerkin>
                  <maximum_courant_number_per_subcycle>
                    <real_value rank="0">0.25</real_value>
                  </maximum_courant_number_per_subcycle>
                </discontinuous_galerkin>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="eisenstat"/>
                <relative_error>
                  <real_value rank="0">1.e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <constant>
                  <real_value rank="0">0.</real_value>
                </constant>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
            </prognostic>
          </scalar_field>
          <scalar_field name="Nrain" rank="0">
            <prognostic>
              <mesh name="TemperatureMesh"/>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <discontinuous_galerkin>
                  <advection_scheme>
                    <upwind/>
                    <project_velocity_to_continuous>
                      <mesh name="CoordinateMesh"/>
                    </project_velocity_to_continuous>
                    <integrate_advection_by_parts>
                      <twice/>
                    </integrate_advection_by_parts>
                  </advection_scheme>
                  <diffusion_scheme>
                    <compact_discontinuous_galerkin/>
                  </diffusion_scheme>
                  <slope_limiter name="Vertex_Based"/>
                </discontinuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.75</real_value>
                </theta>
                <discontinuous_galerkin>
                  <maximum_courant_number_per_subcycle>
                    <real_value rank="0">0.25</real_value>
                  </maximum_courant_number_per_subcycle>
                </discontinuous_galerkin>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="eisenstat"/>
                <relative_error>
                  <real_value rank="0">1.e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <constant>
                  <real_value rank="0">0.</real_value>
                </constant>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
            </prognostic>
          </scalar_field>
          <scalar_field name="Qrain" rank="0">
            <prognostic>
              <mesh name="TemperatureMesh"/>
              <equation name="AdvectionDiffusion"/>
              <spatial_discretisation>
                <discontinuous_galerkin>
                  <advection_scheme>
                    <upwind/>
                    <project_velocity_to_continuous>
                      <mesh name="CoordinateMesh"/>
                    </project_velocity_to_continuous>
                    <integrate_advection_by_parts>
                      <twice/>
                    </integrate_advection_by_parts>
                  </advection_scheme>
                  <diffusion_scheme>
                    <compact_discontinuous_galerkin/>
                  </diffusion_scheme>
                  <slope_limiter name="Vertex_Based"/>
                </discontinuous_galerkin>
                <conservative_advection>
                  <real_value rank="0">0.</real_value>
                </conservative_advection>
              </spatial_discretisation>
              <temporal_discretisation>
                <theta>
                  <real_value rank="0">0.75</real_value>
                </theta>
                <discontinuous_galerkin>
                  <maximum_courant_number_per_subcycle>
                    <real_value rank="0">0.25</real_value>
                  </maximum_courant_number_per_subcycle>
                </discontinuous_galerkin>
              </temporal_discretisation>
              <solver>
                <iterative_method name="gmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                </iterative_method>
                <preconditioner name="eisenstat"/>
                <relative_error>
                  <real_value rank="0">1.e-7</real_value>
                </relative_error>
                <max_iterations>
                  <integer_value rank="0">1000</integer_value>
                </max_iterations>
                <never_ignore_solver_failures/>
                <diagnostics>
                  <monitors/>
                </diagnostics>
              </solver>
              <initial_condition name="WholeMesh">
                <constant>
                  <real_value rank="0">0.</real_value>
                </constant>
              </initial_condition>
              <output/>
              <stat/>
              <convergence>
                <include_in_convergence/>
              </convergence>
              <detectors>
                <include_in_detectors/>
              </detectors>
              <steady_state>
                <include_in_steady_state/>
              </steady_state>
              <consistent_interpolation/>
            </prognostic>
          </scalar_field>
          <autoconversion_radius>
            <real_value rank="0">40e-6</real_value>
          </autoconversion_radius>
          <simple_activation/>
        </two_moment_microphysics>
      </fortran_microphysics>
    </cloud_microphysics>
  </material_phase>
</fluidity_options>
